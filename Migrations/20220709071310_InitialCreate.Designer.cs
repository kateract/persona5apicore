// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persona5ApiCore.Context;

#nullable disable

namespace persona5apicore.Migrations
{
    [DbContext(typeof(PersonaContext))]
    [Migration("20220709071310_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.6");

            modelBuilder.Entity("Persona5ApiCore.Models.Answer", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuestionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Types")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("Persona5ApiCore.Models.DamageEffectiveness", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Almighty")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Bless")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Curse")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Electric")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Fire")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Gun")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Ice")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nuclear")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PersonaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Physical")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Psychic")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Wind")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId")
                        .IsUnique();

                    b.ToTable("DamageEffectivenesses");
                });

            modelBuilder.Entity("Persona5ApiCore.Models.Persona", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Arcana")
                        .HasColumnType("TEXT");

                    b.Property<string>("CodeName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("Persona5ApiCore.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("Persona5ApiCore.Models.Answer", b =>
                {
                    b.HasOne("Persona5ApiCore.Models.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("Persona5ApiCore.Models.DamageEffectiveness", b =>
                {
                    b.HasOne("Persona5ApiCore.Models.Persona", "Persona")
                        .WithOne("DamageEffectiveness")
                        .HasForeignKey("Persona5ApiCore.Models.DamageEffectiveness", "PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Persona5ApiCore.Models.Persona", b =>
                {
                    b.Navigation("DamageEffectiveness");
                });

            modelBuilder.Entity("Persona5ApiCore.Models.Question", b =>
                {
                    b.Navigation("Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
